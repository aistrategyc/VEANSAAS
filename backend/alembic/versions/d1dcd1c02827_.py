"""empty message

Revision ID: d1dcd1c02827
Revises: 46165206f147
Create Date: 2025-08-07 16:35:48.549159

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'd1dcd1c02827'
down_revision: Union[str, Sequence[str], None] = '46165206f147'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'organizations',
        sa.Column('uuid', sa.Uuid(), nullable=False),
        sa.Column('name', sa.String(length=255), nullable=False),
        sa.Column('description', sa.Text(), nullable=True),
        sa.Column(
            'plan_type',
            sa.Enum('SOLO', 'NETWORK', name='organizationplantype'),
            nullable=False,
        ),
        sa.Column(
            'is_active', sa.Boolean(), server_default=sa.text('true'), nullable=False
        ),
        sa.Column('created_by_uuid', sa.Uuid(), nullable=True),
        sa.Column(
            'created_at',
            sa.DateTime(timezone=True),
            server_default=sa.text('now()'),
            nullable=False,
        ),
        sa.Column(
            'updated_at',
            sa.DateTime(timezone=True),
            server_default=sa.text('now()'),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ['created_by_uuid'], ['user_service.users.uuid'], ondelete='SET NULL'
        ),
        sa.PrimaryKeyConstraint('uuid'),
        schema='organization_service',
    )
    op.create_table(
        'organization_members',
        sa.Column('uuid', sa.Uuid(), nullable=False),
        sa.Column('user_uuid', sa.Uuid(), nullable=False),
        sa.Column('organization_uuid', sa.Uuid(), nullable=False),
        sa.Column('roles', sa.JSON(), nullable=False),
        sa.Column('created_by_uuid', sa.Uuid(), nullable=True),
        sa.Column(
            'created_at',
            sa.DateTime(timezone=True),
            server_default=sa.text('now()'),
            nullable=False,
        ),
        sa.Column(
            'updated_at',
            sa.DateTime(timezone=True),
            server_default=sa.text('now()'),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ['created_by_uuid'], ['user_service.users.uuid'], ondelete='SET NULL'
        ),
        sa.ForeignKeyConstraint(
            ['organization_uuid'],
            ['organization_service.organizations.uuid'],
            ondelete='CASCADE',
        ),
        sa.ForeignKeyConstraint(
            ['user_uuid'], ['user_service.users.uuid'], ondelete='CASCADE'
        ),
        sa.PrimaryKeyConstraint('uuid'),
        schema='organization_service',
    )
    op.create_table(
        'studios',
        sa.Column('uuid', sa.Uuid(), nullable=False),
        sa.Column('name', sa.String(length=255), nullable=False),
        sa.Column(
            'is_active', sa.Boolean(), server_default=sa.text('true'), nullable=False
        ),
        sa.Column('organization_uuid', sa.Uuid(), nullable=True),
        sa.Column('created_by_uuid', sa.Uuid(), nullable=True),
        sa.Column(
            'created_at',
            sa.DateTime(timezone=True),
            server_default=sa.text('now()'),
            nullable=False,
        ),
        sa.Column(
            'updated_at',
            sa.DateTime(timezone=True),
            server_default=sa.text('now()'),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ['created_by_uuid'], ['user_service.users.uuid'], ondelete='SET NULL'
        ),
        sa.ForeignKeyConstraint(
            ['organization_uuid'],
            ['organization_service.organizations.uuid'],
            ondelete='SET NULL',
        ),
        sa.PrimaryKeyConstraint('uuid'),
        schema='organization_service',
    )
    op.create_table(
        'studio_members',
        sa.Column('uuid', sa.Uuid(), nullable=False),
        sa.Column('user_uuid', sa.Uuid(), nullable=False),
        sa.Column('studio_uuid', sa.Uuid(), nullable=False),
        sa.Column('roles', sa.JSON(), nullable=False),
        sa.Column('created_by_uuid', sa.Uuid(), nullable=True),
        sa.Column(
            'created_at',
            sa.DateTime(timezone=True),
            server_default=sa.text('now()'),
            nullable=False,
        ),
        sa.Column(
            'updated_at',
            sa.DateTime(timezone=True),
            server_default=sa.text('now()'),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ['created_by_uuid'], ['user_service.users.uuid'], ondelete='SET NULL'
        ),
        sa.ForeignKeyConstraint(
            ['studio_uuid'], ['organization_service.studios.uuid'], ondelete='CASCADE'
        ),
        sa.ForeignKeyConstraint(
            ['user_uuid'], ['user_service.users.uuid'], ondelete='CASCADE'
        ),
        sa.PrimaryKeyConstraint('uuid'),
        schema='organization_service',
    )
    op.add_column(
        'users',
        sa.Column('phone_number', sa.String(length=24), nullable=True),
        schema='user_service',
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('users', 'phone_number', schema='user_service')
    op.drop_table('studio_members', schema='organization_service')
    op.drop_table('studios', schema='organization_service')
    op.drop_table('organization_members', schema='organization_service')
    op.drop_table('organizations', schema='organization_service')
    # ### end Alembic commands ###
