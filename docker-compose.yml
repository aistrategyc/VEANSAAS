services:
  admin-panel:
    depends_on:
      - rabbitmq
    build:
      context: ./backend
      dockerfile: services/admin-panel/Dockerfile
    entrypoint: /app/services/admin-panel/entrypoint.sh
    container_name: admin-panel-svc
    ports:
      - '9000:9000'
    volumes:
      - ./backend/shared:/app/shared
      - ./backend/services/admin-panel/src:/app/services/admin-panel/src
      - ./backend/alembic.ini:/app/alembic.ini
      - ./backend/alembic:/app/alembic
    env_file:
      - ./backend/.env
      - ./backend/services/admin-panel/.env
  backend-auth:
    depends_on:
      rabbitmq:
        condition: service_healthy
    build:
      context: ./backend
      dockerfile: services/auth/Dockerfile
    entrypoint: /app/services/auth/entrypoint.sh
    container_name: auth-svc
    ports:
      - '9001:9001'
    volumes:
      - ./backend/shared:/app/shared
      - ./backend/services/auth/src:/app/services/auth/src
      - ./backend/alembic.ini:/app/alembic.ini
      - ./backend/alembic:/app/alembic
    env_file:
      - ./backend/.env
      - ./backend/services/auth/.env

  backend-user:
    depends_on:
      rabbitmq:
        condition: service_healthy
    build:
      context: ./backend
      dockerfile: services/user/Dockerfile
    entrypoint: /app/services/user/entrypoint.sh
    container_name: user-svc
    ports:
      - '9002:9002'
    volumes:
      - ./backend/shared:/app/shared
      - ./backend/services/user/src:/app/services/user/src
      - ./backend/alembic.ini:/app/alembic.ini
      - ./backend/alembic:/app/alembic
    env_file:
      - ./backend/.env
      - ./backend/services/user/.env

  backend-company-units:
    depends_on:
      rabbitmq:
        condition: service_healthy
    build:
      context: ./backend
      dockerfile: services/company-units/Dockerfile
    entrypoint: /app/services/company-units/entrypoint.sh
    container_name: company-units-svc
    ports:
      - '9003:9003'
    volumes:
      - ./backend/shared:/app/shared
      - ./backend/services/company-units/src:/app/services/company-units/src
      - ./backend/alembic.ini:/app/alembic.ini
      - ./backend/alembic:/app/alembic
    env_file:
      - ./backend/.env
      - ./backend/services/company-units/.env

  backend-notification:
    depends_on:
      rabbitmq:
        condition: service_healthy
    build:
      context: ./backend
      dockerfile: services/notification/Dockerfile
    entrypoint: /app/services/notification/entrypoint.sh
    container_name: notification-svc
    ports:
      - '9004:9004'
    volumes:
      - ./backend/shared:/app/shared
      - ./backend/services/notification/src:/app/services/notification/src
      - ./backend/alembic.ini:/app/alembic.ini
      - ./backend/alembic:/app/alembic
    env_file:
      - ./backend/.env
      - ./backend/services/notification/.env

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - '5173:5173'
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
      - WDS_SOCKET_HOST=0.0.0.0
      - FAST_REFRESH=true
    stdin_open: true
    tty: true
    restart: unless-stopped

  postgres:
    image: postgres:latest
    ports:
      - 5433:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - ./backend/.env

  kong:
    image: kong:latest
    container_name: api-gateway
    environment:
      KONG_DATABASE: off
      KONG_DECLARATIVE_CONFIG: /usr/local/kong/declarative/kong.yml
    volumes:
      - ./backend/api_gateway/kong.yml:/usr/local/kong/declarative/kong.yml
    ports:
      - '8000:8000'
      - '8001:8001'
      - '8443:8443'
      - '8444:8444'

  rabbitmq:
    image: rabbitmq:3.13.7-management
    container_name: rabbitmq
    ports:
      - '5672:5672'
      - '15672:15672'
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
    healthcheck:
      test: rabbitmq-diagnostics -q check_running && rabbitmq-diagnostics -q check_local_alarms
      interval: 30s
      timeout: 10s
      retries: 5

  redis:
    image: redis:alpine
    ports:
      - 6380:6379
    env_file:
      - ./backend/.env
    volumes:
      - redis_data:/data
volumes:
  postgres_data:
  rabbitmq_data:
  redis_data:
